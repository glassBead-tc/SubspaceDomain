<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="143" failures="38" errors="0" time="4.302">
  <testsuite name="RegistrationManager" errors="0" failures="4" skipped="0" timestamp="2025-08-09T10:27:06" time="1.969" tests="17">
    <testcase classname="tests/registration/manager.test.ts" name="should initialize with default config" time="0.003">
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should not initialize when disabled" time="0.014">
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should handle registration request" time="0.001">
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should approve registration" time="0">
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should reject registration" time="0">
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should track registration history" time="0.001">
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should auto-approve matching client type" time="0">
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should not auto-approve non-matching client type" time="0.001">
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should check required capabilities" time="0">
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should check excluded capabilities" time="0.001">
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should call request hook" time="0">
      <failure>ReferenceError: jest is not defined
    at Object.&lt;anonymous&gt; (/workspace/tests/registration/manager.test.ts:168:25)
    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/workspace/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should call approve hook" time="0">
      <failure>ReferenceError: jest is not defined
    at Object.&lt;anonymous&gt; (/workspace/tests/registration/manager.test.ts:183:25)
    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/workspace/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should call reject hook" time="0">
      <failure>ReferenceError: jest is not defined
    at Object.&lt;anonymous&gt; (/workspace/tests/registration/manager.test.ts:201:24)
    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/workspace/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should set expiration times" time="0.001">
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should expire records" time="0.151">
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should handle non-existent record" time="0">
    </testcase>
    <testcase classname="tests/registration/manager.test.ts" name="should handle hook errors" time="0.001">
      <failure>Error: expect(received).rejects.toThrow()

Received promise resolved instead of rejected
Resolved to value: {&quot;expiresAt&quot;: 2025-08-10T10:27:08.329Z, &quot;registrationId&quot;: &quot;ee4c9c0a-f526-4d91-9789-ca63f2fb8e30&quot;, &quot;state&quot;: &quot;PENDING&quot;}
    at expect (/workspace/node_modules/expect/build/index.js:113:15)
    at Object.&lt;anonymous&gt; (/workspace/tests/registration/manager.test.ts:286:13)</failure>
    </testcase>
  </testsuite>
  <testsuite name="SessionManager" errors="0" failures="11" skipped="0" timestamp="2025-08-09T10:27:06" time="2.748" tests="17">
    <testcase classname="tests/identity/session.test.ts" name="should create session" time="0.016">
      <failure>IdentityError: SESSION_NOT_FOUND: Failed to get sessions
    at SessionManager.getSessionsByUser (/workspace/src/identity/session.ts:213:13)
    at SessionManager.createSession (/workspace/src/identity/session.ts:97:24)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/session.test.ts:73:23)</failure>
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should enforce session limit" time="0.007">
      <failure>IdentityError: SESSION_NOT_FOUND: Failed to get sessions
    at SessionManager.getSessionsByUser (/workspace/src/identity/session.ts:213:13)
    at SessionManager.createSession (/workspace/src/identity/session.ts:97:24)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/session.test.ts:87:7)</failure>
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should fail with invalid user" time="0.009">
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should fail with unauthorized machine" time="0.004">
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should fail with invalid client" time="0.005">
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should get active session" time="0.007">
      <failure>IdentityError: SESSION_NOT_FOUND: Failed to get sessions
    at SessionManager.getSessionsByUser (/workspace/src/identity/session.ts:213:13)
    at SessionManager.createSession (/workspace/src/identity/session.ts:97:24)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/session.test.ts:117:23)</failure>
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should fail for expired session" time="0.004">
      <failure>IdentityError: SESSION_NOT_FOUND: Failed to get sessions
    at SessionManager.getSessionsByUser (/workspace/src/identity/session.ts:213:13)
    at SessionManager.createSession (/workspace/src/identity/session.ts:97:24)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/session.test.ts:124:23)</failure>
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should fail for non-existent session" time="0.002">
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should get all user sessions" time="0.003">
      <failure>IdentityError: SESSION_NOT_FOUND: Failed to get sessions
    at SessionManager.getSessionsByUser (/workspace/src/identity/session.ts:213:13)
    at SessionManager.createSession (/workspace/src/identity/session.ts:97:24)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/session.test.ts:143:21)</failure>
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should filter expired sessions" time="0.003">
      <failure>IdentityError: SESSION_NOT_FOUND: Failed to get sessions
    at SessionManager.getSessionsByUser (/workspace/src/identity/session.ts:213:13)
    at SessionManager.createSession (/workspace/src/identity/session.ts:97:24)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/session.test.ts:153:7)</failure>
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should fail for non-existent user" time="0.003">
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should update session timestamps" time="0.002">
      <failure>IdentityError: SESSION_NOT_FOUND: Failed to get sessions
    at SessionManager.getSessionsByUser (/workspace/src/identity/session.ts:213:13)
    at SessionManager.createSession (/workspace/src/identity/session.ts:97:24)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/session.test.ts:171:23)</failure>
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should fail for expired session" time="0.003">
      <failure>IdentityError: SESSION_NOT_FOUND: Failed to get sessions
    at SessionManager.getSessionsByUser (/workspace/src/identity/session.ts:213:13)
    at SessionManager.createSession (/workspace/src/identity/session.ts:97:24)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/session.test.ts:179:23)</failure>
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should end session and update client" time="0.002">
      <failure>IdentityError: SESSION_NOT_FOUND: Failed to get sessions
    at SessionManager.getSessionsByUser (/workspace/src/identity/session.ts:213:13)
    at SessionManager.createSession (/workspace/src/identity/session.ts:97:24)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/session.test.ts:192:23)</failure>
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should fail for non-existent session" time="0.002">
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should clean up expired sessions" time="0.002">
      <failure>IdentityError: SESSION_NOT_FOUND: Failed to get sessions
    at SessionManager.getSessionsByUser (/workspace/src/identity/session.ts:213:13)
    at SessionManager.createSession (/workspace/src/identity/session.ts:97:24)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/session.test.ts:215:23)</failure>
    </testcase>
    <testcase classname="tests/identity/session.test.ts" name="should validate session ID format" time="0.003">
      <failure>IdentityError: SESSION_NOT_FOUND: Failed to get sessions
    at SessionManager.getSessionsByUser (/workspace/src/identity/session.ts:213:13)
    at SessionManager.createSession (/workspace/src/identity/session.ts:97:24)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/session.test.ts:248:23)</failure>
    </testcase>
  </testsuite>
  <testsuite name="UserManager" errors="0" failures="2" skipped="0" timestamp="2025-08-09T10:27:09" time="0.113" tests="15">
    <testcase classname="tests/identity/user.test.ts" name="should create user with machine ID" time="0.006">
    </testcase>
    <testcase classname="tests/identity/user.test.ts" name="should create user without machine ID" time="0.003">
    </testcase>
    <testcase classname="tests/identity/user.test.ts" name="should fail with invalid machine ID" time="0.011">
    </testcase>
    <testcase classname="tests/identity/user.test.ts" name="should get existing user" time="0.003">
    </testcase>
    <testcase classname="tests/identity/user.test.ts" name="should fail for non-existent user" time="0.002">
    </testcase>
    <testcase classname="tests/identity/user.test.ts" name="should get user by machine ID" time="0.002">
      <failure>IdentityError: USER_NOT_FOUND: No user found for machine ID
    at UserManager.getUserByMachine (/workspace/src/identity/user.ts:165:13)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/user.test.ts:98:25)</failure>
    </testcase>
    <testcase classname="tests/identity/user.test.ts" name="should fail for unknown machine ID" time="0.001">
    </testcase>
    <testcase classname="tests/identity/user.test.ts" name="should update user preferences" time="0.003">
    </testcase>
    <testcase classname="tests/identity/user.test.ts" name="should add machine ID" time="0.002">
      <failure>IdentityError: USER_INVALID: Invalid user data
    at UserManager.updateUser (/workspace/src/identity/user.ts:197:15)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/user.test.ts:127:23)</failure>
    </testcase>
    <testcase classname="tests/identity/user.test.ts" name="should fail with invalid updates" time="0.002">
    </testcase>
    <testcase classname="tests/identity/user.test.ts" name="should delete existing user" time="0.002">
    </testcase>
    <testcase classname="tests/identity/user.test.ts" name="should fail for non-existent user" time="0.001">
    </testcase>
    <testcase classname="tests/identity/user.test.ts" name="should validate user ID format" time="0.004">
    </testcase>
    <testcase classname="tests/identity/user.test.ts" name="should validate machine IDs" time="0.002">
    </testcase>
    <testcase classname="tests/identity/user.test.ts" name="should validate preferences" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="RateLimiter" errors="0" failures="8" skipped="0" timestamp="2025-08-09T10:27:06" time="2.918" tests="12">
    <testcase classname="tests/security/ratelimit.test.ts" name="should initialize with valid config" time="0.003">
    </testcase>
    <testcase classname="tests/security/ratelimit.test.ts" name="should fail with invalid storage type" time="0.018">
    </testcase>
    <testcase classname="tests/security/ratelimit.test.ts" name="should allow requests within limit" time="0.002">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 3
Received: Infinity
    at Object.&lt;anonymous&gt; (/workspace/tests/security/ratelimit.test.ts:58:32)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="tests/security/ratelimit.test.ts" name="should block requests over limit" time="0">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: false
Received: true
    at Object.&lt;anonymous&gt; (/workspace/tests/security/ratelimit.test.ts:81:30)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="tests/security/ratelimit.test.ts" name="should reset after window" time="1.103">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 3
Received: Infinity
    at Object.&lt;anonymous&gt; (/workspace/tests/security/ratelimit.test.ts:97:32)</failure>
    </testcase>
    <testcase classname="tests/security/ratelimit.test.ts" name="should match resource patterns" time="0">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 3
Received: Infinity
    at Object.&lt;anonymous&gt; (/workspace/tests/security/ratelimit.test.ts:132:32)</failure>
    </testcase>
    <testcase classname="tests/security/ratelimit.test.ts" name="should match user identity" time="0.001">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 3
Received: Infinity
    at Object.&lt;anonymous&gt; (/workspace/tests/security/ratelimit.test.ts:141:32)</failure>
    </testcase>
    <testcase classname="tests/security/ratelimit.test.ts" name="should match client identity" time="0">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 5
Received: Infinity
    at Object.&lt;anonymous&gt; (/workspace/tests/security/ratelimit.test.ts:157:32)</failure>
    </testcase>
    <testcase classname="tests/security/ratelimit.test.ts" name="should use most restrictive limit" time="0.001">
    </testcase>
    <testcase classname="tests/security/ratelimit.test.ts" name="should track limits independently" time="0">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 3
Received: Infinity
    at Object.&lt;anonymous&gt; (/workspace/tests/security/ratelimit.test.ts:212:32)</failure>
    </testcase>
    <testcase classname="tests/security/ratelimit.test.ts" name="should allow all requests when disabled" time="0.001">
    </testcase>
    <testcase classname="tests/security/ratelimit.test.ts" name="should not track requests when disabled" time="0">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 3
Received: Infinity
    at Object.&lt;anonymous&gt; (/workspace/tests/security/ratelimit.test.ts:271:32)</failure>
    </testcase>
  </testsuite>
  <testsuite name="FileStorage" errors="0" failures="4" skipped="0" timestamp="2025-08-09T10:27:09" time="0.167" tests="10">
    <testcase classname="tests/registration/storage.test.ts" name="should create storage directory" time="0.01">
      <failure>StorageError: File not found
    at PersistentStorage.read (/workspace/src/storage/persistentStorage.ts:131:15)
    at Object.&lt;anonymous&gt; (/workspace/tests/registration/storage.test.ts:58:21)</failure>
    </testcase>
    <testcase classname="tests/registration/storage.test.ts" name="should save and retrieve record" time="0.006">
    </testcase>
    <testcase classname="tests/registration/storage.test.ts" name="should return null for non-existent record" time="0.002">
    </testcase>
    <testcase classname="tests/registration/storage.test.ts" name="should list all records" time="0.014">
    </testcase>
    <testcase classname="tests/registration/storage.test.ts" name="should delete record" time="0.002">
    </testcase>
    <testcase classname="tests/registration/storage.test.ts" name="should handle deleting non-existent record" time="0.002">
    </testcase>
    <testcase classname="tests/registration/storage.test.ts" name="should enforce max records limit" time="0.008">
      <failure>Error: expect(received).toEqual(expected) // deep equality

- Expected  - 1
+ Received  + 1

  Array [
-   &quot;3&quot;,
    &quot;2&quot;,
+   &quot;3&quot;,
  ]
    at Object.&lt;anonymous&gt; (/workspace/tests/registration/storage.test.ts:133:40)</failure>
    </testcase>
    <testcase classname="tests/registration/storage.test.ts" name="should clean up old records" time="0.019">
    </testcase>
    <testcase classname="tests/registration/storage.test.ts" name="should handle storage read errors" time="0.001">
      <failure>Error: expect(received).rejects.toThrow()

Received promise resolved instead of rejected
Resolved to value: []
    at expect (/workspace/node_modules/expect/build/index.js:113:15)
    at Object.&lt;anonymous&gt; (/workspace/tests/registration/storage.test.ts:165:13)
    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)
    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/workspace/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="tests/registration/storage.test.ts" name="should handle storage write errors" time="0.001">
      <failure>ReferenceError: jest is not defined
    at Object.&lt;anonymous&gt; (/workspace/tests/registration/storage.test.ts:172:7)
    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)
    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/workspace/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
  </testsuite>
  <testsuite name="ClientManager" errors="0" failures="3" skipped="0" timestamp="2025-08-09T10:27:09" time="0.276" tests="17">
    <testcase classname="tests/identity/client.test.ts" name="should create client with machine ID" time="0.009">
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should create client without machine ID" time="0.003">
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should increment instance number" time="0.007">
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should fail with invalid user" time="0.026">
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should fail with unauthorized machine" time="0.002">
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should get existing client" time="0.004">
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should fail for non-existent client" time="0.003">
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should get all user clients" time="0.007">
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should return empty array for user with no clients" time="0.003">
      <failure>IdentityError: CLIENT_NOT_FOUND: Failed to get clients
    at ClientManager.getClientsByUser (/workspace/src/identity/client.ts:157:13)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/client.test.ts:127:23)</failure>
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should fail for non-existent user" time="0.003">
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should update client sessions" time="0.005">
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should fail with invalid updates" time="0.008">
      <failure>Error: expect(received).rejects.toThrow()

Received promise resolved instead of rejected
Resolved to value: {&quot;components&quot;: {&quot;clientType&quot;: &quot;invalid&quot;, &quot;instance&quot;: 0, &quot;machineId&quot;: &quot;1c9655ae203d42939538661ee3b4dbb9&quot;, &quot;userId&quot;: &quot;daf70dce7d9a90ab&quot;}, &quot;created&quot;: 2025-08-09T10:27:09.485Z, &quot;id&quot;: &quot;claude-daf70dce-1c9655ae-c527919d-0&quot;, &quot;lastSeen&quot;: 2025-08-09T10:27:09.487Z, &quot;sessions&quot;: []}
    at expect (/workspace/node_modules/expect/build/index.js:113:15)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/client.test.ts:152:13)</failure>
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should delete existing client" time="0.007">
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should fail for non-existent client" time="0.009">
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should validate client ID format" time="0.008">
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should validate machine IDs" time="0.009">
    </testcase>
    <testcase classname="tests/identity/client.test.ts" name="should validate client type" time="0.012">
      <failure>Error: expect(received).rejects.toThrow()

Received promise resolved instead of rejected
Resolved to value: {&quot;components&quot;: {&quot;clientType&quot;: &quot;invalid&quot;, &quot;instance&quot;: 0, &quot;machineId&quot;: &quot;1c9655ae203d42939538661ee3b4dbb9&quot;, &quot;userId&quot;: &quot;d4a278b6f3d61a46&quot;}, &quot;created&quot;: 2025-08-09T10:27:09.526Z, &quot;id&quot;: &quot;invalid-d4a278b6-1c9655ae-5195f79c-0&quot;, &quot;lastSeen&quot;: 2025-08-09T10:27:09.526Z, &quot;sessions&quot;: []}
    at expect (/workspace/node_modules/expect/build/index.js:113:15)
    at Object.&lt;anonymous&gt; (/workspace/tests/identity/client.test.ts:204:13)
    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)
    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/workspace/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
  </testsuite>
  <testsuite name="AccessControlManager" errors="0" failures="3" skipped="0" timestamp="2025-08-09T10:27:09" time="0.123" tests="21">
    <testcase classname="tests/security/access.test.ts" name="should initialize with valid config" time="0.001">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should fail with invalid rules" time="0.016">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should use default level when no rules match" time="0.001">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should match resource patterns" time="0.001">
      <failure>SecurityError: ACCESS_DENIED: Failed to check access
    at AccessControlManager.checkAccess (/workspace/src/security/access.ts:108:13)
    at Object.&lt;anonymous&gt; (/workspace/tests/security/access.test.ts:48:28)
    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/workspace/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should match user identity" time="0.001">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should match client identity" time="0">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should match machine identity" time="0.001">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should allow access during work hours" time="0">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should deny access outside work hours" time="0.001">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should deny access on weekends" time="0">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should match CIDR range" time="0.001">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should match wildcard pattern" time="0.001">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should match exact IP" time="0">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should allow access from allowed locations" time="0.001">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should deny access from other locations" time="0">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should add valid rule" time="0.001">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: false
    at Object.&lt;anonymous&gt; (/workspace/tests/security/access.test.ts:194:10)
    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/workspace/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should fail with invalid rule" time="0">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should remove rule" time="0.001">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: false
    at Object.&lt;anonymous&gt; (/workspace/tests/security/access.test.ts:215:10)
    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/workspace/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should validate time format" time="0">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should validate IP format" time="0.001">
    </testcase>
    <testcase classname="tests/security/access.test.ts" name="should validate day numbers" time="0">
    </testcase>
  </testsuite>
  <testsuite name="PromptAnalyzer - extractDependencies" errors="0" failures="1" skipped="0" timestamp="2025-08-09T10:27:09" time="0.088" tests="6">
    <testcase classname="tests/generation/promptAnalyzer.test.ts" name="should return default dependency for null prompt" time="0.001">
    </testcase>
    <testcase classname="tests/generation/promptAnalyzer.test.ts" name="should return default dependency for empty prompt" time="0.001">
    </testcase>
    <testcase classname="tests/generation/promptAnalyzer.test.ts" name="should return default dependency for prompt with no dependencies" time="0">
    </testcase>
    <testcase classname="tests/generation/promptAnalyzer.test.ts" name="should extract a simple dependency without version" time="0">
    </testcase>
    <testcase classname="tests/generation/promptAnalyzer.test.ts" name="should extract a simple dependency with a specific version" time="0.001">
    </testcase>
    <testcase classname="tests/generation/promptAnalyzer.test.ts" name="should extract multiple dependencies with and without versions" time="0.003">
      <failure>Error: expect(received).toEqual(expected) // deep equality

- Expected  - 4
+ Received  + 0

@@ -7,14 +7,10 @@
      },
      &quot;@reduxjs/toolkit&quot;: Object {
        &quot;reason&quot;: &quot;Identified from prompt: @reduxjs/toolkit@~1.9&quot;,
        &quot;version&quot;: &quot;~1.9&quot;,
      },
-     &quot;axios&quot;: Object {
-       &quot;reason&quot;: &quot;Identified from prompt: axios&quot;,
-       &quot;version&quot;: &quot;latest&quot;,
-     },
      &quot;react&quot;: Object {
        &quot;reason&quot;: &quot;Identified from prompt: react@^18.2.0&quot;,
        &quot;version&quot;: &quot;^18.2.0&quot;,
      },
    },
    at Object.&lt;anonymous&gt; (/workspace/tests/generation/promptAnalyzer.test.ts:79:54)
    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)
    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/workspace/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
  </testsuite>
  <testsuite name="MCP Bridge Server" errors="0" failures="0" skipped="0" timestamp="2025-08-09T10:27:09" time="0.073" tests="4">
    <testcase classname="tests/server.test.ts" name="should manage client connections" time="0.002">
    </testcase>
    <testcase classname="tests/server.test.ts" name="should track task state" time="0">
    </testcase>
    <testcase classname="tests/server.test.ts" name="should route messages based on rules" time="0.013">
    </testcase>
    <testcase classname="tests/server.test.ts" name="should handle missing target clients" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="AuditLogger" errors="0" failures="2" skipped="0" timestamp="2025-08-09T10:27:08" time="1.383" tests="11">
    <testcase classname="tests/security/audit.test.ts" name="should create log directory" time="0.004">
    </testcase>
    <testcase classname="tests/security/audit.test.ts" name="should not create directory when disabled" time="0.006">
    </testcase>
    <testcase classname="tests/security/audit.test.ts" name="should write log entry" time="0.003">
    </testcase>
    <testcase classname="tests/security/audit.test.ts" name="should not write when disabled" time="0.001">
    </testcase>
    <testcase classname="tests/security/audit.test.ts" name="should include metadata" time="0.002">
    </testcase>
    <testcase classname="tests/security/audit.test.ts" name="should rotate log file on interval" time="1.102">
    </testcase>
    <testcase classname="tests/security/audit.test.ts" name="should rotate log file on size limit" time="0.003">
      <failure>Error: expect(received).not.toBe(expected) // Object.is equality

Expected: not &quot;/tmp/mcp-test-QsfkC8/size-test/audit-2025-08-09T10-27-09-539Z.log&quot;
    at Object.&lt;anonymous&gt; (/workspace/tests/security/audit.test.ts:190:30)</failure>
    </testcase>
    <testcase classname="tests/security/audit.test.ts" name="should delete old log files" time="0.004">
    </testcase>
    <testcase classname="tests/security/audit.test.ts" name="should keep recent log files" time="0.011">
      <failure>Error: expect(received).toContain(expected) // indexOf

Expected substring: &quot;recent-test&quot;
Received string:    &quot;&quot;
    at Object.&lt;anonymous&gt; (/workspace/tests/security/audit.test.ts:233:23)</failure>
    </testcase>
    <testcase classname="tests/security/audit.test.ts" name="should handle write errors" time="0.01">
    </testcase>
    <testcase classname="tests/security/audit.test.ts" name="should handle rotation errors gracefully" time="0.152">
    </testcase>
  </testsuite>
  <testsuite name="EncryptionManager" errors="0" failures="0" skipped="0" timestamp="2025-08-09T10:27:09" time="0.409" tests="13">
    <testcase classname="tests/security/encryption.test.ts" name="should initialize with valid config" time="0.015">
    </testcase>
    <testcase classname="tests/security/encryption.test.ts" name="should fail with invalid config" time="0.015">
    </testcase>
    <testcase classname="tests/security/encryption.test.ts" name="should fail with invalid key derivation" time="0.006">
    </testcase>
    <testcase classname="tests/security/encryption.test.ts" name="should encrypt and decrypt data" time="0.017">
    </testcase>
    <testcase classname="tests/security/encryption.test.ts" name="should fail when encryption is disabled" time="0.006">
    </testcase>
    <testcase classname="tests/security/encryption.test.ts" name="should fail with algorithm mismatch" time="0.011">
    </testcase>
    <testcase classname="tests/security/encryption.test.ts" name="should fail with tampered data" time="0.016">
    </testcase>
    <testcase classname="tests/security/encryption.test.ts" name="should fail with tampered tag" time="0.023">
    </testcase>
    <testcase classname="tests/security/encryption.test.ts" name="should work with PBKDF2" time="0.022">
    </testcase>
    <testcase classname="tests/security/encryption.test.ts" name="should work with scrypt" time="0.167">
    </testcase>
    <testcase classname="tests/security/encryption.test.ts" name="should fail with Argon2" time="0.005">
    </testcase>
    <testcase classname="tests/security/encryption.test.ts" name="should work with AES-256-GCM" time="0.02">
    </testcase>
    <testcase classname="tests/security/encryption.test.ts" name="should work with AES-256-CBC" time="0.021">
    </testcase>
  </testsuite>
</testsuites>